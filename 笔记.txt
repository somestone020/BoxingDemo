  unity
gameObject.SendMessage(string methodName,SendMessageOptions) 
给同组件下的GameObject找methodName的方法并调用,这个方法可以是公有的也可以是私有的
gameObject.SendMessageUpwards() 向遍历所有父对象发送消息
gmaeObject.BroadcastMessage() 向遍历的所有子对象发送消息

出线

  txt文档转数组
System.Environment
string data = enemyNamesList.ToString();
		string cReturns = System.Environment.NewLine + "\n" + "\r"; 
		string[] lines = data.Split(cReturns.ToCharArray());

//取得鼠标点击的屏幕坐标
Vector2 input = new Vector2 (Input.mousePosition.x,Input.mousePosition.y);
//将世界坐标换算成屏幕坐标
Vector3 vpos3 = Camera.main.WorldToScreenPoint(transform.position);
Vector2 vpos2 = new Vector2 (vpos3.x,vpos3.y);
//根据照相机的角度计算真实的方向
float y = Camera.main.transform.rotation.eulerAngles.y;
targetDirection = Quaternion.Euler(0f,y – 180,0f) * targetDirection;

特性
CustomEditor[typeof(InputManager)] 自定义编辑面板
[HideInInspector] 表示将原本显示在面板上的序列化值隐藏起来
[System.SerializeField] 序列化，将不会被序列化的私有变量和保护变量变成可以被序列化的
[System.Serializable] 序列化
[Header("Settings")] 面板显示字符
[RequireComponent (typeof(Rigidbody))] 检查组件
[Space(5)] 面板空行

Inspectors面板编辑
[CustomEditor(typeof(UIMyButton))]
public class LocalizationTextEditor : UnityEditor.UI.ButtonEditor
{
    public override void OnInspectorGUI()
    {
        base.OnInspectorGUI();
        UIMyButton component = (UIMyButton)target;
	//一段文本
        EditorGUILayout.LabelField("RotatedDrection");
	//创建一个枚举类型
        component.rotatedDrection = (UIMyButton.RotatedDrection)EditorGUILayout.EnumPopup("Drection", component.rotatedDrection);
    	EditorGUILayout.IntPopup
	
    }
}

//绘制细条
void OnDrawGizmos(){
		Gizmos.color = Color.green;
		Gizmos.DrawWireSphere (transform.position, pickUpRange); 
	}




拳击游戏整理

  Enemy
相关类 
EnemyAI：EnemyActions 敌人AI
HealthSystem 处理血量
EnemyManager 敌人管理